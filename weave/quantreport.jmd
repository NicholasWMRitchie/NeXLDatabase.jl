```julia; echo=false
using NeXLSpectrum
using NeXLDatabase
using DataFrames
using Gadfly

db, fspkey = WEAVE_ARGS[:Database], WEAVE_ARGS[:FitSpectra]
fs = read(db, DBFitSpectra, fspkey);
```
# Quantification Report
This report details quantifying a set of related spectra.

##### Project
Details about who collected what, where and using what instrumentation.
```julia; echo=false
asa(DataFrame, fs)
```

##### Measured Spectra
The spectra which will be quantified using the reference spectra.
```julia; echo=false
asa(DataFrame, fs.fitspectrum)
```

##### Reference Spectra
The spectra against which the measured spectra will be compared.  The reference spectra must have clear views
(unobstructed by other element's characteristic lines) of the characteristic x-ray lines for which it is a
reference.
  )
```julia; echo=false
asa(DataFrame, fs.refspectrum)
```
#### Quantification Results
```julia
function quantify(ffr::FilterFitResult)::
bestKs = optimizeks(SimpleKRatioOptimizer(1.5), kratios(ffr))::Vector{KRatio}
return iterateks(Iteration(XPP,ReedFluorescence), "Result", bestKs)



##### K-ratios
The k-ratio is the ratio of the intensity in the measured to the intensity in the reference for a specific set of
characteristic x-ray lines.
```julia; echo=false
ffrs = NeXLSpectrum.fit(db, DBFitSpectra, fspkey)
res=asa(DataFrame, ffrs)
```
##### Statistics
Summary statistics for the k-ratio data.  (Mean, Standad Deviation, Minimum, 1st quartile, Median, 3rd Quartile and Maximum)
```julia; echo=false
describe(res, :mean, :std, :min, :q25, :median, :q75, :max, cols=names(res)[2:end])
```

##### Residuals
The residuals show how well the reference spectra fit the unknown spectra.
```julia; echo=false; fig_ext=".svg"; fig_width=10; fig_height=4;
for ffr in ffrs
  display(plot(ffr))
end;
```
